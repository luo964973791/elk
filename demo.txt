cat <<EOF > /root/demo.log
{"project_name":"safetv-audit-desetsis","uri":["/ecomm-biz-http/icontrol/http/safety/resource/y1.0/istÃbnormalAndAlertStan-biz-htto/control/htto1.0/pagePublishedAssetUnit"]}
{"project_name":"e-communicator-web","uri":["/ecomm-biz-http/icontrol/http/safety/resource/2.0/istÃbnormalAndAlertStan-biz-htto/control/htto1.0/pagePublishedAssetUnit"]}
{"project_name":"safetv-audit-desetsis","uri":["/ecomm-biz-http/icontrol/http/safety/resource/y1.0/istÃbnormalAndAlertStan-biz-htto/control/htto2.0/pagePublishedAssetUnit"]}
EOF



cat <<EOF > /etc/logstash/conf.d/demo.conf 
input {
  file {
    path => "/root/demo.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  json {
    source => "message"
  }

  if [project_name] {
    aggregate {
      task_id => "%{project_name}"
      code => "
        map['project_name'] ||= event.get('project_name')
        map['uris'] ||= []
        map['uris'] << event.get('uri')
        count_field = map['project_name'] + '_count'
        map[count_field] ||= 0
        map[count_field] += 1
        event.set('uris', map['uris'].uniq)
        event.set('count_field', map[count_field])
        event.cancel()
      "
      push_map_as_event_on_timeout => true
      timeout_task_id_field => "project_name"
      timeout => 1
    }

    ruby {
      code => "event.set('@timestamp_sort', event.get('@timestamp'))"
    }

    mutate {
      remove_field => ["@version", "@timestamp_sort"]
    }
  } else {
    drop {}
  }
}

output {
  stdout {
    codec => json_lines
  }
}
EOF


/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/demo.conf -r